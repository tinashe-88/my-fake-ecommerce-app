{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'; // Reusable generator function\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/Tinashe/development/react-js/my-fake-ecommerce-app/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,aADF,EAEEC,aAFF,QAGO,gBAHP;AAKA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP,C,CAMA;;AACA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAChD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACO,yBAAD,EAA4BE,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMb,GAAG,CAACI,aAAa,CAAC;AACtBU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADK;AAEtB,SAAGF,YAAY,CAACG,IAAb;AAFmB,KAAD,CAAd,CAAT;AAID,GARD,CAQE,OAAMC,KAAN,EAAY;AACZ,UAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA4B;AACjC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CAAvB;AACA,UAAME,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAMF,KAAN,EAAY;AACZ,UAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAAyD;AAC9D,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMd,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAMF,KAAN,EAAY;AACZ,UAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAA+B;AACpC,QAAM1B,UAAU,CACdI,eAAe,CAACuB,oBADF,EAEdT,gBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,kBAAV,GAA8B;AACnC,QAAM5B,UAAU,CACdI,eAAe,CAACyB,mBADF,EAEdR,eAFc,CAAhB;AAID;AAED,OAAO,UAAUS,SAAV,GAAqB;AAC1B,QAAM3B,GAAG,CAAC,CACRD,IAAI,CAACwB,mBAAD,CADI,EAERxB,IAAI,CAAC0B,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\n\nimport {\n  signInSuccess,\n  signInFailure,\n} from './user.actions'\n\nimport { \n  auth, \n  googleProvider, \n  createUserProfileDocument \n} from '../../firebase/firebase.utils'\n\n// Reusable generator function\nexport function* getSnapshotFromUserAuth(userAuth){\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth)\n    const userSnapshot = yield userRef.get()\n\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }))\n  } catch(error){\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* signInWithGoogle(){\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    yield getSnapshotFromUserAuth(user)\n  } catch(error){\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password}}){\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnapshotFromUserAuth(user)\n  } catch(error){\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart(){\n  yield takeLatest(\n    UserActionTypes.GOOGLE_SIGN_IN_START, \n    signInWithGoogle\n  )\n}\n\nexport function* onEmailSignInStart(){\n  yield takeLatest(\n    UserActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail\n  )\n}\n\nexport function* userSagas(){\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart)\n  ])\n}"]},"metadata":{},"sourceType":"module"}