{"ast":null,"code":"var _jsxFileName = \"/Users/Tinashe/development/react-js/my-fake-ecommerce-app/src/pages/shop/shoppage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionPage from '../collection/collection';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  // componentDidMount(){\n  //   const { updateCollections } = this.props\n  //   const collectionRef = firestore.collection('collections')\n  //   this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //     updateCollections(collectionsMap)\n  //     this.setState({ loading: false })\n  //   })\n  // }\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/my-fake-ecommerce/databases/(default)/documents').then(response => response.json()).then(collections => console.log(collections)); // collectionRef.get().then(snapshot => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //   updateCollections(collectionsMap)\n    //   this.setState({ lodaing: false })\n    // })\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/Tinashe/development/react-js/my-fake-ecommerce-app/src/pages/shop/shoppage.jsx"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionPage","CollectionsOverview","WithSpinner","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACD,mBAAD,CAAlD;AACA,MAAMG,0BAA0B,GAAGF,WAAW,CAACF,cAAD,CAA9C;;AAEA,MAAMK,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrC;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACAC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC;AACA,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,8FAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFvB,EAJiB,CAQjB;AACA;AAEA;AACA;AACA;AACD;;AAGDG,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKX,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AAEA,wBACE,uDACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAEZ,KAAK,iBACX,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEZ,KAAK,iBACX,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEH;AAAvC,SAAoDG,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AAxDoC;;AA2DvC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtC1B,EAAAA,iBAAiB,EAAE2B,cAAc,IAAID,QAAQ,CAC3C1B,iBAAiB,CAAC2B,cAAD,CAD0B;AADP,CAAL,CAAnC;;AAMA,eAAe9B,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCnB,QAAlC,CAAf","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { \n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils'\n\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\nimport CollectionPage from '../collection/collection'\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview'\nimport WithSpinner from '../../components/with-spinner/with-spinner'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true\n  }\n\n  unsubscribeFromSnapshot = null\n\n  // componentDidMount(){\n  //   const { updateCollections } = this.props\n  //   const collectionRef = firestore.collection('collections')\n\n  //   this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //     updateCollections(collectionsMap)\n\n  //     this.setState({ loading: false })\n  //   })\n  // }\n  componentDidMount(){\n    const { updateCollections } = this.props\n    const collectionRef = firestore.collection('collections')\n\n    fetch('https://firestore.googleapis.com/v1/projects/my-fake-ecommerce/databases/(default)/documents')\n      .then(response => response.json())\n      .then(collections => console.log(collections))\n\n    // collectionRef.get().then(snapshot => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\n    //   updateCollections(collectionsMap)\n    //   this.setState({ lodaing: false })\n    // })\n  }\n\n\n  render(){\n    const { match } = this.props\n    const { loading } = this.state\n\n    return (\n      <>\n        <Route \n          exact \n          path={`${match.path}`} \n          render={props => (\n            <CollectionsOverviewWithSpinner isLoading={loading} {...props}/>\n          )}\n        />\n        <Route \n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionsPageWithSpinner isLoading={loading} {...props}/>\n          )}\n        />\n      </>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(\n    updateCollections(collectionsMap)\n  )\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}