{"ast":null,"code":"import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null));\nexport const selectCollectionForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/Tinashe/development/react-js/my-fake-ecommerce-app/client/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","selectShop","state","shop","selectCollections","collections","selectCollection","collectionUrlParam","selectCollectionForPreview","Object","keys","map","key","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC7C,CAACE,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACE,WAFgC,CAAxC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,OAAO,CAACO,kBAAkB,IACxDR,cAAc,CACZ,CAACK,iBAAD,CADY,EAEZC,WAAW,IACTA,WAAW,GAAGA,WAAW,CAACE,kBAAD,CAAd,GACT,IAJQ,CADuB,CAAhC;AASP,OAAO,MAAMC,0BAA0B,GAAGT,cAAc,CACtD,CAACK,iBAAD,CADsD,EAEtDC,WAAW,IACPA,WAAW,GAAGI,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,GAAzB,CAA6BC,GAAG,IAAIP,WAAW,CAACO,GAAD,CAA/C,CAAH,GACT,EAJgD,CAAjD;AAOP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACtD,CAACE,UAAD,CADsD,EAEtDE,IAAI,IAAIA,IAAI,CAACW,UAFyC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACrD,CAACE,UAAD,CADqD,EAErDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFsC,CAAhD","sourcesContent":["import { createSelector } from 'reselect'\nimport memoize from 'lodash.memoize'\n\nconst selectShop = state => state.shop\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n)\n\nexport const selectCollection = memoize(collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections => \n      collections ? collections[collectionUrlParam]\n      : null\n  )\n)\n\nexport const selectCollectionForPreview = createSelector(\n  [selectCollections],\n  collections => \n      collections ? Object.keys(collections).map(key => collections[key])\n      : []\n)\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n)"]},"metadata":{},"sourceType":"module"}