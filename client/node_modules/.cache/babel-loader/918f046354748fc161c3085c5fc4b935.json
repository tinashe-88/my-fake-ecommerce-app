{"ast":null,"code":"var _jsxFileName = \"/Users/Tinashe/development/react-js/my-fake-ecommerce-app/src/pages/shop/shoppage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport CollectionPage from '../collection/collection';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/Tinashe/development/react-js/my-fake-ecommerce-app/src/pages/shop/shoppage.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionPage","CollectionsOverview","WithSpinner","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SACEC,0BADF,EAEEC,yBAFF,QAGO,gCAHP;AAKA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACD,mBAAD,CAAlD;AACA,MAAMG,0BAA0B,GAAGF,WAAW,CAACF,cAAD,CAA9C;;AAEA,MAAMK,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAAEV,MAAAA;AAAF,QAAiC,KAAKW,KAA5C;AAEAX,IAAAA,0BAA0B;AAC3B;;AAEDY,EAAAA,MAAM,GAAE;AACN,UAAM;AACJC,MAAAA,KADI;AAEJC,MAAAA,oBAFI;AAGJC,MAAAA;AAHI,QAIF,KAAKJ,KAJT;AAMA,wBACE,uDACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAEL,KAAK,iBACX,oBAAC,8BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEL,KAAK,iBACX,oBAAC,0BAAD;AACE,QAAA,SAAS,EAAE,CAACI;AADd,SAEMJ,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAuBD;;AArCoC;;AAwCvC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC/Ce,EAAAA,oBAAoB,EAAEb,0BADyB;AAE/Cc,EAAAA,kBAAkB,EAAEb;AAF2B,CAAD,CAAhD;;AAKA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,0BAA0B,EAAE,MAAMmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\nimport { \n  selectIsCollectionFetching, \n  selectIsCollectionsLoaded \n} from '../../redux/shop/shop.selector'\n\nimport CollectionPage from '../collection/collection'\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview'\nimport WithSpinner from '../../components/with-spinner/with-spinner'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n  componentDidMount(){\n    const { fetchCollectionsStartAsync } = this.props\n\n    fetchCollectionsStartAsync()\n  }\n\n  render(){\n    const { \n      match, \n      isCollectionFetching, \n      isCollectionLoaded \n    } = this.props\n\n    return (\n      <>\n        <Route \n          exact \n          path={`${match.path}`} \n          render={props => (\n            <CollectionsOverviewWithSpinner \n              isLoading={isCollectionFetching} \n              {...props}\n            />\n          )}\n        />\n        <Route \n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionsPageWithSpinner \n              isLoading={!isCollectionLoaded} \n              {...props}\n            />\n          )}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionsLoaded\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}