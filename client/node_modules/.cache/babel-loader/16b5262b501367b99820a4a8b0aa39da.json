{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartItemsQuantity = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartTotal = createSelector([selectCart], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/Tinashe/development/react-js/my-fake-ecommerce-app/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsQuantity","reduce","accumalatedQuantity","cartItem","quantity","selectCartHidden","hidden","selectCartTotal","accumulatedQuantity","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,SAF8B,CAAtC;AAKP,OAAO,MAAMC,uBAAuB,GAAGN,cAAc,CACnD,CAACI,eAAD,CADmD,EAEnDC,SAAS,IAAIA,SAAS,CAACE,MAAV,CACX,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAFtB,EAGX,CAHW,CAFsC,CAA9C;AASP,OAAO,MAAMC,gBAAgB,GAAGX,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CE,IAAI,IAAIA,IAAI,CAACS,MAF+B,CAAvC;AAMP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CI,SAAS,IAAIA,SAAS,CAACE,MAAV,CAAkB,CAACO,mBAAD,EAAsBL,QAAtB,KAC7BK,mBAAmB,GAAGL,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACM,KADxC,EAEX,CAFW,CAF8B,CAAtC","sourcesContent":["import { createSelector } from 'reselect'\n\nconst selectCart = state => state.cart\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n)\n\nexport const selectCartItemsQuantity = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce(\n    (accumalatedQuantity, cartItem) => \n      accumalatedQuantity + cartItem.quantity,\n    0\n  )\n)\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  cart => cart.hidden\n)\n\n\nexport const selectCartTotal = createSelector(\n  [selectCart],\n  cartItems => cartItems.reduce( (accumulatedQuantity, cartItem) => \n    accumulatedQuantity + cartItem.quantity * cartItem.price\n  , 0)\n)"]},"metadata":{},"sourceType":"module"}